#!/bin/bash

# Entrypoint called by the Docker File, it connects to the postgres db

# Exit if failure
set -o errexit

# Exit if any line fails
set -o pipefail

# Error if unset variables
set -o nounset

# If not env variable POSTGRES_USER we try to use default user
if [ -z "${POSTGRES_USER}" ]; then
  base_postgres_image_default_user='postgres'
  export POSTGRES_USER="${base_postgres_image_default_user}"
fi

python << END
import sys
import time
# We can import psycopg2  here because this gets called from a Dockerfile that has already installed it
import psycopg2
suggest_unrecoverable_after = 30
start = time.time()
while True:
  try:
    psycopg2.connect(
      dbname="${POSTGRES_DB}",
      user="${POSTGRES_USER}",
      password="${POSTGRES_PASSWORD}",
      host="${POSTGRES_HOST}",
      port="${POSTGRES_PORT}",
    )
    break
  except psycopg2.OperationalError as error:
    sys.stderr.write("Waiting for PostgreSQL to become available...\n")
    if time.time() - start > suggest_unrecoverable_after:
      sys.stderr.write(" This is taking longer than expected. The following exception may be indicative of an unrecoverable error: '{}'\n".format(error))
  time.sleep(1)
END

>&2 echo "PostgreSQL is available"

exec "$@"