#TODO: Maybe update to a most recent version
version: "3.9"

services:
    api:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start
        # Don't need to declare a volume for static data here because it
        # is handled by .:/app:z, so it would work anyways without nginx
        volumes:
            # Map current directory to working directory in our container
            # Changes in local directory will be reflected in container
            # :z is used to apply a SELinux label for proper access control
            - .:/app:z
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        expose:
            # Gives access to this port for services in the container e.g. nginx
            -  "8000"
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.postgres
        depends_on:
            - postgres
            - redis
        networks:
            - blogs-api

    postgres:
        build:
            context: .
            dockerfile: ./docker/local/postgres/Dockerfile
        volumes:
            - local_postgres_data:/var/lib/postgresql/data
        env_file:
            - ./.envs/.local/.postgres
        networks:
            - blogs-api

    redis:
        image: redis:7-alpine
        networks:
            - blogs-api

    celery_worker:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-celeryworker
        volumes:
            - .:/app
        env_file:
            - ./.envs/.local/.django
            - ./.envs/.local/.postgres
        depends_on:
            - redis
            - postgres
        networks:
            - blogs-api

    # Docker handles starting the starting of these services (it knows how to type the appropriate command)
    nginx:
        # Restarts if exit regardless of exit code
        restart: always
        depends_on:
            - api
        volumes:
            - static_volume:/app/staticfiles
        build:
            context: ./docker/local/nginx
            dockerfile: Dockerfile
        ports:
            - "8080:80"
        networks:
            - blogs-api

networks:
    blogs-api:
        driver: bridge

volumes:
    static_volume:
    media_volume:
    local_postgres_data: {}